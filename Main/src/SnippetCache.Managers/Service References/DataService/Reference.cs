//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.CodeDom.Compiler;
using System.Diagnostics;
using System.ServiceModel;
using System.ServiceModel.Channels;
using SnippetCache.Data.DTO;
using SnippetCache.Engines.DataService;

namespace SnippetCache.Managers.DataService
{
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName = "DataService.ISnippetCacheDataService")]
    public interface ISnippetCacheDataService
    {
        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllLanguages",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllLanguagesResponse")]
        GetAllLanguagesResponse GetAllLanguages(GetAllLanguagesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetLanguageById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByIdResponse")]
        GetLanguageByIdResponse GetLanguageById(GetLanguageByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByNameResponse")]
        GetLanguageByNameResponse GetLanguageByName(GetLanguageByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewLanguageResponse")]
        CreateNewLanguageResponse CreateNewLanguage(CreateNewLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateLanguageResponse")]
        UpdateLanguageResponse UpdateLanguage(UpdateLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteLanguageResponse")]
        DeleteLanguageResponse DeleteLanguage(DeleteLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllUsers",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllUsersResponse")]
        GetAllUsersResponse GetAllUsers(GetAllUsersRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetUserById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetUserByIdResponse")]
        GetUserByIdResponse GetUserById(GetUserByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetUserByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetUserByNameResponse")]
        GetUserByNameResponse GetUserByName(GetUserByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewUserResponse")]
        CreateNewUserResponse CreateNewUser(CreateNewUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateUserResponse")]
        UpdateUserResponse UpdateUser(UpdateUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteUserResponse")]
        DeleteUserResponse DeleteUser(DeleteUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationTypes",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationTypesResponse")]
        GetAllNotificationTypesResponse GetAllNotificationTypes(GetAllNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByIdResponse")]
        GetNotificationTypesByIdResponse GetNotificationTypeById(GetNotificationTypesByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByNameResponse")]
        GetNotificationTypesByNameResponse GetNotificationTypeByName(GetNotificationTypesByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationTypeResponse")]
        CreateNewNotificationTypesResponse CreateNewNotificationType(CreateNewNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationTypeResponse")]
        UpdateNotificationTypesResponse UpdateNotificationType(UpdateNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationTypeResponse")]
        DeleteNotificationTypesResponse DeleteNotificationType(DeleteNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllNotifications",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationsResponse")]
        GetAllNotificationsResponse GetAllNotifications(GetAllNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationByIdResponse")]
        GetNotificationsByIdResponse GetNotificationById(GetNotificationsByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationsForUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationsForUserResponse")]
        GetAllNotificationsForUserResponse GetNotificationsForUser(GetAllNotificationsForUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationResponse")]
        CreateNewNotificationsResponse CreateNewNotification(CreateNewNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationResponse")]
        UpdateNotificationsResponse UpdateNotification(UpdateNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationResponse")]
        DeleteNotificationsResponse DeleteNotification(DeleteNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllComments",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsResponse")]
        GetAllCommentsResponse GetAllComments(GetAllCommentsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsBySnippetIdResponse")]
        GetAllCommentsForSnippetResponse GetAllCommentsBySnippetId(GetAllCommentsForSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetCommentById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetCommentByIdResponse")]
        GetCommentByIdResponse GetCommentById(GetCommentByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewCommentResponse")]
        CreateNewCommentResponse CreateNewComment(CreateNewCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateCommentResponse")]
        UpdateCommentResponse UpdateComment(UpdateCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteCommentResponse")]
        DeleteCommentResponse DeleteComment(DeleteCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFilesBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFilesBySnippetIdResponse")]
        GetFilesBySnippetIdResponse GetFilesBySnippetId(GetFilesBySnippetIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFileById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFileByIdResponse")]
        GetFileByIdResponse GetFileById(GetFileByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFilesByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFilesByUserIdResponse")]
        GetFilesByUserIdResponse GetFilesByUserId(GetFilesByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateFileResponse")]
        CreateFileResponse CreateFile(CreateFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateFileResponse")]
        UpdateFileResponse UpdateFile(UpdateFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteFileResponse")]
        DeleteFileResponse DeleteFile(DeleteFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetTotalSnippetCount",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetTotalSnippetCountResponse")]
        int GetTotalSnippetCount(bool isPrivate);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksBySnippetIdResponse")]
        GetHyperlinksBySnippetIdResponse GetHyperlinksBySnippetId(GetHyperlinksBySnippetIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinkById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinkByIdResponse")]
        GetHyperlinkByIdResponse GetHyperlinkById(GetHyperlinkByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksByUserIdResponse")]
        GetHyperlinksByUserIdResponse GetHyperlinksByUserId(GetHyperlinksByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateHyperlinkResponse")]
        CreateHyperlinkResponse CreateHyperlink(CreateHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateHyperlinkResponse")]
        UpdateHyperlinkResponse UpdateHyperlink(UpdateHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteHyperlinkResponse")]
        DeleteHyperlinkResponse DeleteHyperlink(DeleteHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetPagedSnippetList",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetPagedSnippetListResponse")]
        GetPagedSnippetListResponse GetPagedSnippetList(GetPagedSnippetListRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByIdResponse")]
        GetSnippetByIdResponse GetSnippetById(GetSnippetByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByUserIdResponse")]
        GetSnippetsByUserIdResponse GetSnippetsByUserId(GetSnippetsByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByGuid",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByGuidResponse")]
        GetSnippetByGuidResponse GetSnippetByGuid(GetSnippetByGuidRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateSnippetResponse")]
        CreateSnippetResponse CreateSnippet(CreateSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateSnippetResponse")]
        [ServiceKnownType(typeof (GetAllLanguagesResponse))]
        [ServiceKnownType(typeof (ServiceResponseBase))]
        [ServiceKnownType(typeof (LanguageQuickInfo[]))]
        [ServiceKnownType(typeof (LanguageQuickInfo))]
        [ServiceKnownType(typeof (GetLanguageByIdResponse))]
        [ServiceKnownType(typeof (GetLanguageByNameResponse))]
        [ServiceKnownType(typeof (CreateNewLanguageResponse))]
        [ServiceKnownType(typeof (UpdateLanguageResponse))]
        [ServiceKnownType(typeof (DeleteLanguageResponse))]
        [ServiceKnownType(typeof (GetAllUsersResponse))]
        [ServiceKnownType(typeof (UserQuickInfo[]))]
        [ServiceKnownType(typeof (UserQuickInfo))]
        [ServiceKnownType(typeof (GetUserByIdResponse))]
        [ServiceKnownType(typeof (GetUserByNameResponse))]
        [ServiceKnownType(typeof (CreateNewUserResponse))]
        [ServiceKnownType(typeof (UpdateUserResponse))]
        [ServiceKnownType(typeof (DeleteUserResponse))]
        [ServiceKnownType(typeof (GetAllNotificationTypesResponse))]
        [ServiceKnownType(typeof (GetNotificationTypesByIdResponse))]
        [ServiceKnownType(typeof (GetNotificationTypesByNameResponse))]
        [ServiceKnownType(typeof (CreateNewNotificationTypesResponse))]
        [ServiceKnownType(typeof (UpdateNotificationTypesResponse))]
        [ServiceKnownType(typeof (DeleteNotificationTypesResponse))]
        [ServiceKnownType(typeof (GetAllNotificationsResponse))]
        [ServiceKnownType(typeof (NotificationQuickInfo[]))]
        [ServiceKnownType(typeof (NotificationQuickInfo))]
        [ServiceKnownType(typeof (GetNotificationsByIdResponse))]
        [ServiceKnownType(typeof (GetAllNotificationsForUserResponse))]
        [ServiceKnownType(typeof (CreateNewNotificationsResponse))]
        [ServiceKnownType(typeof (UpdateNotificationsResponse))]
        [ServiceKnownType(typeof (DeleteNotificationsResponse))]
        [ServiceKnownType(typeof (GetAllCommentsResponse))]
        [ServiceKnownType(typeof (CommentQuickInfo[]))]
        [ServiceKnownType(typeof (CommentQuickInfo))]
        [ServiceKnownType(typeof (GetAllCommentsForSnippetResponse))]
        [ServiceKnownType(typeof (GetCommentByIdResponse))]
        [ServiceKnownType(typeof (CreateNewCommentResponse))]
        [ServiceKnownType(typeof (UpdateCommentResponse))]
        [ServiceKnownType(typeof (DeleteCommentResponse))]
        [ServiceKnownType(typeof (GetFilesBySnippetIdResponse))]
        [ServiceKnownType(typeof (GetFileByIdResponse))]
        [ServiceKnownType(typeof (GetFilesByUserIdResponse))]
        [ServiceKnownType(typeof (CreateFileResponse))]
        [ServiceKnownType(typeof (UpdateFileResponse))]
        [ServiceKnownType(typeof (DeleteFileResponse))]
        [ServiceKnownType(typeof (GetHyperlinksBySnippetIdResponse))]
        [ServiceKnownType(typeof (GetHyperlinkByIdResponse))]
        [ServiceKnownType(typeof (GetHyperlinksByUserIdResponse))]
        [ServiceKnownType(typeof (CreateHyperlinkResponse))]
        [ServiceKnownType(typeof (UpdateHyperlinkResponse))]
        [ServiceKnownType(typeof (DeleteHyperlinkResponse))]
        [ServiceKnownType(typeof (GetPagedSnippetListResponse))]
        [ServiceKnownType(typeof (GetSnippetByIdResponse))]
        [ServiceKnownType(typeof (GetSnippetsByUserIdResponse))]
        [ServiceKnownType(typeof (GetSnippetByGuidResponse))]
        [ServiceKnownType(typeof (CreateSnippetResponse))]
        [ServiceKnownType(typeof (DeleteSnippetResponse))]
        [ServiceKnownType(typeof (GetSnippetsByTitleResponse))]
        [ServiceKnownType(typeof (GetSnippetsByDescriptionResponse))]
        [ServiceKnownType(typeof (GetSnippetsByDataResponse))]
        [ServiceKnownType(typeof (GetAllLanguagesRequest))]
        [ServiceKnownType(typeof (GetLanguageByIdRequest))]
        [ServiceKnownType(typeof (GetLanguageByNameRequest))]
        [ServiceKnownType(typeof (CreateNewLanguageRequest))]
        [ServiceKnownType(typeof (UpdateLanguageRequest))]
        [ServiceKnownType(typeof (DeleteLanguageRequest))]
        [ServiceKnownType(typeof (GetAllUsersRequest))]
        [ServiceKnownType(typeof (GetUserByIdRequest))]
        [ServiceKnownType(typeof (GetUserByNameRequest))]
        [ServiceKnownType(typeof (CreateNewUserRequest))]
        [ServiceKnownType(typeof (UpdateUserRequest))]
        [ServiceKnownType(typeof (DeleteUserRequest))]
        [ServiceKnownType(typeof (GetAllNotificationTypesRequest))]
        [ServiceKnownType(typeof (NotificationTypeQuickInfo[]))]
        [ServiceKnownType(typeof (NotificationTypeQuickInfo))]
        [ServiceKnownType(typeof (GetNotificationTypesByIdRequest))]
        [ServiceKnownType(typeof (GetNotificationTypesByNameRequest))]
        [ServiceKnownType(typeof (CreateNewNotificationTypesRequest))]
        [ServiceKnownType(typeof (UpdateNotificationTypesRequest))]
        [ServiceKnownType(typeof (DeleteNotificationTypesRequest))]
        [ServiceKnownType(typeof (GetAllNotificationsRequest))]
        [ServiceKnownType(typeof (GetNotificationsByIdRequest))]
        [ServiceKnownType(typeof (GetAllNotificationsForUserRequest))]
        [ServiceKnownType(typeof (CreateNewNotificationsRequest))]
        [ServiceKnownType(typeof (UpdateNotificationsRequest))]
        [ServiceKnownType(typeof (DeleteNotificationsRequest))]
        [ServiceKnownType(typeof (GetAllCommentsRequest))]
        [ServiceKnownType(typeof (GetAllCommentsForSnippetRequest))]
        [ServiceKnownType(typeof (GetCommentByIdRequest))]
        [ServiceKnownType(typeof (CreateNewCommentRequest))]
        [ServiceKnownType(typeof (UpdateCommentRequest))]
        [ServiceKnownType(typeof (DeleteCommentRequest))]
        [ServiceKnownType(typeof (GetFilesBySnippetIdRequest))]
        [ServiceKnownType(typeof (GetFileByIdRequest))]
        [ServiceKnownType(typeof (GetFilesByUserIdRequest))]
        [ServiceKnownType(typeof (CreateFileRequest))]
        [ServiceKnownType(typeof (UpdateFileRequest))]
        [ServiceKnownType(typeof (DeleteFileRequest))]
        [ServiceKnownType(typeof (GetHyperlinksBySnippetIdRequest))]
        [ServiceKnownType(typeof (GetHyperlinkByIdRequest))]
        [ServiceKnownType(typeof (GetHyperlinksByUserIdRequest))]
        [ServiceKnownType(typeof (CreateHyperlinkRequest))]
        [ServiceKnownType(typeof (UpdateHyperlinkRequest))]
        [ServiceKnownType(typeof (DeleteHyperlinkRequest))]
        [ServiceKnownType(typeof (GetPagedSnippetListRequest))]
        [ServiceKnownType(typeof (GetSnippetByIdRequest))]
        [ServiceKnownType(typeof (GetSnippetsByUserIdRequest))]
        [ServiceKnownType(typeof (GetSnippetByGuidRequest))]
        [ServiceKnownType(typeof (CreateSnippetRequest))]
        [ServiceKnownType(typeof (UpdateSnippetRequest))]
        [ServiceKnownType(typeof (DeleteSnippetRequest))]
        [ServiceKnownType(typeof (GetSnippetsByTitleRequest))]
        [ServiceKnownType(typeof (GetSnippetsByDescriptionRequest))]
        [ServiceKnownType(typeof (GetSnippetsByDataRequest))]
        [ServiceKnownType(typeof (FileDTO[]))]
        [ServiceKnownType(typeof (FileDTO))]
        [ServiceKnownType(typeof (HyperlinkDTO[]))]
        [ServiceKnownType(typeof (HyperlinkDTO))]
        [ServiceKnownType(typeof (SnippetDTO[]))]
        [ServiceKnownType(typeof (SnippetDTO))]
        UpdateSnippetResponse UpdateSnippet(UpdateSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteSnippetResponse")]
        DeleteSnippetResponse DeleteSnippet(DeleteSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByTitle",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByTitleResponse")]
        GetSnippetsByTitleResponse GetSnippetsByTitle(GetSnippetsByTitleRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDescription",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDescriptionResponse")]
        GetSnippetsByDescriptionResponse GetSnippetsByDescription(GetSnippetsByDescriptionRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByData",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDataResponse")]
        GetSnippetsByDataResponse GetSnippetsByData(GetSnippetsByDataRequest request);
    }

    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ISnippetCacheDataServiceChannel : ISnippetCacheDataService, IClientChannel
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public class SnippetCacheDataServiceClient : ClientBase<ISnippetCacheDataService>, ISnippetCacheDataService
    {
        public SnippetCacheDataServiceClient()
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public SnippetCacheDataServiceClient(Binding binding, EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        #region ISnippetCacheDataService Members

        public GetAllLanguagesResponse GetAllLanguages(GetAllLanguagesRequest request)
        {
            return base.Channel.GetAllLanguages(request);
        }

        public GetLanguageByIdResponse GetLanguageById(GetLanguageByIdRequest request)
        {
            return base.Channel.GetLanguageById(request);
        }

        public GetLanguageByNameResponse GetLanguageByName(GetLanguageByNameRequest request)
        {
            return base.Channel.GetLanguageByName(request);
        }

        public CreateNewLanguageResponse CreateNewLanguage(CreateNewLanguageRequest request)
        {
            return base.Channel.CreateNewLanguage(request);
        }

        public UpdateLanguageResponse UpdateLanguage(UpdateLanguageRequest request)
        {
            return base.Channel.UpdateLanguage(request);
        }

        public DeleteLanguageResponse DeleteLanguage(DeleteLanguageRequest request)
        {
            return base.Channel.DeleteLanguage(request);
        }

        public GetAllUsersResponse GetAllUsers(GetAllUsersRequest request)
        {
            return base.Channel.GetAllUsers(request);
        }

        public GetUserByIdResponse GetUserById(GetUserByIdRequest request)
        {
            return base.Channel.GetUserById(request);
        }

        public GetUserByNameResponse GetUserByName(GetUserByNameRequest request)
        {
            return base.Channel.GetUserByName(request);
        }

        public CreateNewUserResponse CreateNewUser(CreateNewUserRequest request)
        {
            return base.Channel.CreateNewUser(request);
        }

        public UpdateUserResponse UpdateUser(UpdateUserRequest request)
        {
            return base.Channel.UpdateUser(request);
        }

        public DeleteUserResponse DeleteUser(DeleteUserRequest request)
        {
            return base.Channel.DeleteUser(request);
        }

        public GetAllNotificationTypesResponse GetAllNotificationTypes(GetAllNotificationTypesRequest request)
        {
            return base.Channel.GetAllNotificationTypes(request);
        }

        public GetNotificationTypesByIdResponse GetNotificationTypeById(GetNotificationTypesByIdRequest request)
        {
            return base.Channel.GetNotificationTypeById(request);
        }

        public GetNotificationTypesByNameResponse GetNotificationTypeByName(GetNotificationTypesByNameRequest request)
        {
            return base.Channel.GetNotificationTypeByName(request);
        }

        public CreateNewNotificationTypesResponse CreateNewNotificationType(CreateNewNotificationTypesRequest request)
        {
            return base.Channel.CreateNewNotificationType(request);
        }

        public UpdateNotificationTypesResponse UpdateNotificationType(UpdateNotificationTypesRequest request)
        {
            return base.Channel.UpdateNotificationType(request);
        }

        public DeleteNotificationTypesResponse DeleteNotificationType(DeleteNotificationTypesRequest request)
        {
            return base.Channel.DeleteNotificationType(request);
        }

        public GetAllNotificationsResponse GetAllNotifications(GetAllNotificationsRequest request)
        {
            return base.Channel.GetAllNotifications(request);
        }

        public GetNotificationsByIdResponse GetNotificationById(GetNotificationsByIdRequest request)
        {
            return base.Channel.GetNotificationById(request);
        }

        public GetAllNotificationsForUserResponse GetNotificationsForUser(GetAllNotificationsForUserRequest request)
        {
            return base.Channel.GetNotificationsForUser(request);
        }

        public CreateNewNotificationsResponse CreateNewNotification(CreateNewNotificationsRequest request)
        {
            return base.Channel.CreateNewNotification(request);
        }

        public UpdateNotificationsResponse UpdateNotification(UpdateNotificationsRequest request)
        {
            return base.Channel.UpdateNotification(request);
        }

        public DeleteNotificationsResponse DeleteNotification(DeleteNotificationsRequest request)
        {
            return base.Channel.DeleteNotification(request);
        }

        public GetAllCommentsResponse GetAllComments(GetAllCommentsRequest request)
        {
            return base.Channel.GetAllComments(request);
        }

        public GetAllCommentsForSnippetResponse GetAllCommentsBySnippetId(GetAllCommentsForSnippetRequest request)
        {
            return base.Channel.GetAllCommentsBySnippetId(request);
        }

        public GetCommentByIdResponse GetCommentById(GetCommentByIdRequest request)
        {
            return base.Channel.GetCommentById(request);
        }

        public CreateNewCommentResponse CreateNewComment(CreateNewCommentRequest request)
        {
            return base.Channel.CreateNewComment(request);
        }

        public UpdateCommentResponse UpdateComment(UpdateCommentRequest request)
        {
            return base.Channel.UpdateComment(request);
        }

        public DeleteCommentResponse DeleteComment(DeleteCommentRequest request)
        {
            return base.Channel.DeleteComment(request);
        }

        public GetFilesBySnippetIdResponse GetFilesBySnippetId(GetFilesBySnippetIdRequest request)
        {
            return base.Channel.GetFilesBySnippetId(request);
        }

        public GetFileByIdResponse GetFileById(GetFileByIdRequest request)
        {
            return base.Channel.GetFileById(request);
        }

        public GetFilesByUserIdResponse GetFilesByUserId(GetFilesByUserIdRequest request)
        {
            return base.Channel.GetFilesByUserId(request);
        }

        public CreateFileResponse CreateFile(CreateFileRequest request)
        {
            return base.Channel.CreateFile(request);
        }

        public UpdateFileResponse UpdateFile(UpdateFileRequest request)
        {
            return base.Channel.UpdateFile(request);
        }

        public DeleteFileResponse DeleteFile(DeleteFileRequest request)
        {
            return base.Channel.DeleteFile(request);
        }

        public int GetTotalSnippetCount(bool isPrivate)
        {
            return base.Channel.GetTotalSnippetCount(isPrivate);
        }

        public GetHyperlinksBySnippetIdResponse GetHyperlinksBySnippetId(GetHyperlinksBySnippetIdRequest request)
        {
            return base.Channel.GetHyperlinksBySnippetId(request);
        }

        public GetHyperlinkByIdResponse GetHyperlinkById(GetHyperlinkByIdRequest request)
        {
            return base.Channel.GetHyperlinkById(request);
        }

        public GetHyperlinksByUserIdResponse GetHyperlinksByUserId(GetHyperlinksByUserIdRequest request)
        {
            return base.Channel.GetHyperlinksByUserId(request);
        }

        public CreateHyperlinkResponse CreateHyperlink(CreateHyperlinkRequest request)
        {
            return base.Channel.CreateHyperlink(request);
        }

        public UpdateHyperlinkResponse UpdateHyperlink(UpdateHyperlinkRequest request)
        {
            return base.Channel.UpdateHyperlink(request);
        }

        public DeleteHyperlinkResponse DeleteHyperlink(DeleteHyperlinkRequest request)
        {
            return base.Channel.DeleteHyperlink(request);
        }

        public GetPagedSnippetListResponse GetPagedSnippetList(GetPagedSnippetListRequest request)
        {
            return base.Channel.GetPagedSnippetList(request);
        }

        public GetSnippetByIdResponse GetSnippetById(GetSnippetByIdRequest request)
        {
            return base.Channel.GetSnippetById(request);
        }

        public GetSnippetsByUserIdResponse GetSnippetsByUserId(GetSnippetsByUserIdRequest request)
        {
            return base.Channel.GetSnippetsByUserId(request);
        }

        public GetSnippetByGuidResponse GetSnippetByGuid(GetSnippetByGuidRequest request)
        {
            return base.Channel.GetSnippetByGuid(request);
        }

        public CreateSnippetResponse CreateSnippet(CreateSnippetRequest request)
        {
            return base.Channel.CreateSnippet(request);
        }

        public UpdateSnippetResponse UpdateSnippet(UpdateSnippetRequest request)
        {
            return base.Channel.UpdateSnippet(request);
        }

        public DeleteSnippetResponse DeleteSnippet(DeleteSnippetRequest request)
        {
            return base.Channel.DeleteSnippet(request);
        }

        public GetSnippetsByTitleResponse GetSnippetsByTitle(GetSnippetsByTitleRequest request)
        {
            return base.Channel.GetSnippetsByTitle(request);
        }

        public GetSnippetsByDescriptionResponse GetSnippetsByDescription(GetSnippetsByDescriptionRequest request)
        {
            return base.Channel.GetSnippetsByDescription(request);
        }

        public GetSnippetsByDataResponse GetSnippetsByData(GetSnippetsByDataRequest request)
        {
            return base.Channel.GetSnippetsByData(request);
        }

        #endregion
    }
}