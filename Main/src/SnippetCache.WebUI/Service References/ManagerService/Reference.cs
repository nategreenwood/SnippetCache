//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18331
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnippetCache.WebUI.ManagerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SnippetDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class SnippetDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPublicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Language_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PreviewDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid User_FormsAuthIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublic {
            get {
                return this.IsPublicField;
            }
            set {
                if ((this.IsPublicField.Equals(value) != true)) {
                    this.IsPublicField = value;
                    this.RaisePropertyChanged("IsPublic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Language_Id {
            get {
                return this.Language_IdField;
            }
            set {
                if ((this.Language_IdField.Equals(value) != true)) {
                    this.Language_IdField = value;
                    this.RaisePropertyChanged("Language_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] PreviewData {
            get {
                return this.PreviewDataField;
            }
            set {
                if ((object.ReferenceEquals(this.PreviewDataField, value) != true)) {
                    this.PreviewDataField = value;
                    this.RaisePropertyChanged("PreviewData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid User_FormsAuthId {
            get {
                return this.User_FormsAuthIdField;
            }
            set {
                if ((this.User_FormsAuthIdField.Equals(value) != true)) {
                    this.User_FormsAuthIdField = value;
                    this.RaisePropertyChanged("User_FormsAuthId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LanguageDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class LanguageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] AvatarImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FormsAuthIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] AvatarImage {
            get {
                return this.AvatarImageField;
            }
            set {
                if ((object.ReferenceEquals(this.AvatarImageField, value) != true)) {
                    this.AvatarImageField = value;
                    this.RaisePropertyChanged("AvatarImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FormsAuthId {
            get {
                return this.FormsAuthIdField;
            }
            set {
                if ((this.FormsAuthIdField.Equals(value) != true)) {
                    this.FormsAuthIdField = value;
                    this.RaisePropertyChanged("FormsAuthId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class FileDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Snippet_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Snippet_Id {
            get {
                return this.Snippet_IdField;
            }
            set {
                if ((this.Snippet_IdField.Equals(value) != true)) {
                    this.Snippet_IdField = value;
                    this.RaisePropertyChanged("Snippet_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HyperlinkDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class HyperlinkDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastModifiedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Snippet_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UriField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastModified {
            get {
                return this.LastModifiedField;
            }
            set {
                if ((this.LastModifiedField.Equals(value) != true)) {
                    this.LastModifiedField = value;
                    this.RaisePropertyChanged("LastModified");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Snippet_Id {
            get {
                return this.Snippet_IdField;
            }
            set {
                if ((this.Snippet_IdField.Equals(value) != true)) {
                    this.Snippet_IdField = value;
                    this.RaisePropertyChanged("Snippet_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotificationDTO", Namespace="http://schemas.datacontract.org/2004/07/SnippetCache.Data.DTO")]
    [System.SerializableAttribute()]
    public partial class NotificationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NotificationType_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid User_FormsAuthIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int User_IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NotificationType_Id {
            get {
                return this.NotificationType_IdField;
            }
            set {
                if ((this.NotificationType_IdField.Equals(value) != true)) {
                    this.NotificationType_IdField = value;
                    this.RaisePropertyChanged("NotificationType_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid User_FormsAuthId {
            get {
                return this.User_FormsAuthIdField;
            }
            set {
                if ((this.User_FormsAuthIdField.Equals(value) != true)) {
                    this.User_FormsAuthIdField = value;
                    this.RaisePropertyChanged("User_FormsAuthId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int User_Id {
            get {
                return this.User_IdField;
            }
            set {
                if ((this.User_IdField.Equals(value) != true)) {
                    this.User_IdField = value;
                    this.RaisePropertyChanged("User_Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManagerService.ISnippetCacheManagerService")]
    public interface ISnippetCacheManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/CreateSnippet", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/CreateSnippetResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO CreateSnippet(SnippetCache.WebUI.ManagerService.SnippetDTO snippet, SnippetCache.WebUI.ManagerService.LanguageDTO language, SnippetCache.WebUI.ManagerService.UserDTO user, SnippetCache.WebUI.ManagerService.FileDTO[] files, SnippetCache.WebUI.ManagerService.HyperlinkDTO[] links);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsByUser", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsByUserResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsByUser(string text, int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsByUserPaged", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsByUserPagedResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsByUserPaged(string text, int userId, System.Guid userGuid, int snippetsPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/FindSnippets", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippets(string text);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsPaged", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/FindSnippetsPagedResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsPaged(string text, int itemsPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetSnippets", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetSnippetsResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] GetSnippets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetAllPublicSnippets", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetAllPublicSnippetsResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] GetAllPublicSnippets(int snippetsPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetSnippet", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetSnippetResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO GetSnippet(string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetSnippetsByPage", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetSnippetsByPageResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] GetSnippetsByPage(int snippetsPerPage, int currentPage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetPrivateSnippets", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetPrivateSnippetsResponse")]
        SnippetCache.WebUI.ManagerService.SnippetDTO[] GetPrivateSnippets(int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetLanguagesForDisplay", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetLanguagesForDisplayResponse")]
        SnippetCache.WebUI.ManagerService.LanguageDTO[] GetLanguagesForDisplay();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetTotalSnippetCount", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetTotalSnippetCountResponse")]
        int GetTotalSnippetCount(bool isPrivate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetHyperlinksForSnippet", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetHyperlinksForSnippetResponse")]
        SnippetCache.WebUI.ManagerService.HyperlinkDTO[] GetHyperlinksForSnippet(System.Guid snippetId, int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/GetFilesForSnippet", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/GetFilesForSnippetResponse")]
        SnippetCache.WebUI.ManagerService.FileDTO[] GetFilesForSnippet(System.Guid snippetId, int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/UserDetails", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/UserDetailsResponse")]
        SnippetCache.WebUI.ManagerService.UserDTO UserDetails(int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/UpdateUserDetails", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/UpdateUserDetailsResponse")]
        bool UpdateUserDetails(SnippetCache.WebUI.ManagerService.UserDTO userDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/UnreadUserNotification", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/UnreadUserNotificationResponse")]
        SnippetCache.WebUI.ManagerService.NotificationDTO[] UnreadUserNotification(int userId, System.Guid userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/CreateNewUserNotification", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/CreateNewUserNotificationResponse")]
        void CreateNewUserNotification(SnippetCache.WebUI.ManagerService.NotificationDTO notification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnippetCacheManagerService/RemoveUserNotification", ReplyAction="http://tempuri.org/ISnippetCacheManagerService/RemoveUserNotificationResponse")]
        void RemoveUserNotification(SnippetCache.WebUI.ManagerService.NotificationDTO notification);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISnippetCacheManagerServiceChannel : SnippetCache.WebUI.ManagerService.ISnippetCacheManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SnippetCacheManagerServiceClient : System.ServiceModel.ClientBase<SnippetCache.WebUI.ManagerService.ISnippetCacheManagerService>, SnippetCache.WebUI.ManagerService.ISnippetCacheManagerService {
        
        public SnippetCacheManagerServiceClient() {
        }
        
        public SnippetCacheManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SnippetCacheManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnippetCacheManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnippetCacheManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO CreateSnippet(SnippetCache.WebUI.ManagerService.SnippetDTO snippet, SnippetCache.WebUI.ManagerService.LanguageDTO language, SnippetCache.WebUI.ManagerService.UserDTO user, SnippetCache.WebUI.ManagerService.FileDTO[] files, SnippetCache.WebUI.ManagerService.HyperlinkDTO[] links) {
            return base.Channel.CreateSnippet(snippet, language, user, files, links);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsByUser(string text, int userId, System.Guid userGuid) {
            return base.Channel.FindSnippetsByUser(text, userId, userGuid);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsByUserPaged(string text, int userId, System.Guid userGuid, int snippetsPerPage, int currentPage) {
            return base.Channel.FindSnippetsByUserPaged(text, userId, userGuid, snippetsPerPage, currentPage);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippets(string text) {
            return base.Channel.FindSnippets(text);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] FindSnippetsPaged(string text, int itemsPerPage, int currentPage) {
            return base.Channel.FindSnippetsPaged(text, itemsPerPage, currentPage);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] GetSnippets() {
            return base.Channel.GetSnippets();
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] GetAllPublicSnippets(int snippetsPerPage, int currentPage) {
            return base.Channel.GetAllPublicSnippets(snippetsPerPage, currentPage);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO GetSnippet(string guid) {
            return base.Channel.GetSnippet(guid);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] GetSnippetsByPage(int snippetsPerPage, int currentPage) {
            return base.Channel.GetSnippetsByPage(snippetsPerPage, currentPage);
        }
        
        public SnippetCache.WebUI.ManagerService.SnippetDTO[] GetPrivateSnippets(int userId, System.Guid userGuid) {
            return base.Channel.GetPrivateSnippets(userId, userGuid);
        }
        
        public SnippetCache.WebUI.ManagerService.LanguageDTO[] GetLanguagesForDisplay() {
            return base.Channel.GetLanguagesForDisplay();
        }
        
        public int GetTotalSnippetCount(bool isPrivate) {
            return base.Channel.GetTotalSnippetCount(isPrivate);
        }
        
        public SnippetCache.WebUI.ManagerService.HyperlinkDTO[] GetHyperlinksForSnippet(System.Guid snippetId, int userId, System.Guid userGuid) {
            return base.Channel.GetHyperlinksForSnippet(snippetId, userId, userGuid);
        }
        
        public SnippetCache.WebUI.ManagerService.FileDTO[] GetFilesForSnippet(System.Guid snippetId, int userId, System.Guid userGuid) {
            return base.Channel.GetFilesForSnippet(snippetId, userId, userGuid);
        }
        
        public SnippetCache.WebUI.ManagerService.UserDTO UserDetails(int userId, System.Guid userGuid) {
            return base.Channel.UserDetails(userId, userGuid);
        }
        
        public bool UpdateUserDetails(SnippetCache.WebUI.ManagerService.UserDTO userDto) {
            return base.Channel.UpdateUserDetails(userDto);
        }
        
        public SnippetCache.WebUI.ManagerService.NotificationDTO[] UnreadUserNotification(int userId, System.Guid userGuid) {
            return base.Channel.UnreadUserNotification(userId, userGuid);
        }
        
        public void CreateNewUserNotification(SnippetCache.WebUI.ManagerService.NotificationDTO notification) {
            base.Channel.CreateNewUserNotification(notification);
        }
        
        public void RemoveUserNotification(SnippetCache.WebUI.ManagerService.NotificationDTO notification) {
            base.Channel.RemoveUserNotification(notification);
        }
    }
}
