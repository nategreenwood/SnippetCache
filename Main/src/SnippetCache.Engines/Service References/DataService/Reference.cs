//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Runtime.Serialization;
using System.ServiceModel;
using System.ServiceModel.Channels;
using SnippetCache.Data.DTO;

namespace SnippetCache.Engines.DataService
{
    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllLanguagesRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllLanguagesRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [NonSerialized] private ExtensionDataObject extensionDataField;

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "ServiceResponseBase",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    [KnownType(typeof (GetLanguageByIdResponse))]
    [KnownType(typeof (GetLanguageByNameResponse))]
    [KnownType(typeof (CreateNewLanguageResponse))]
    [KnownType(typeof (UpdateLanguageResponse))]
    [KnownType(typeof (DeleteLanguageResponse))]
    [KnownType(typeof (GetAllUsersResponse))]
    [KnownType(typeof (GetUserByIdResponse))]
    [KnownType(typeof (GetUserByNameResponse))]
    [KnownType(typeof (CreateNewUserResponse))]
    [KnownType(typeof (UpdateUserResponse))]
    [KnownType(typeof (DeleteUserResponse))]
    [KnownType(typeof (GetAllNotificationTypesResponse))]
    [KnownType(typeof (GetNotificationTypesByIdResponse))]
    [KnownType(typeof (GetNotificationTypesByNameResponse))]
    [KnownType(typeof (CreateNewNotificationTypesResponse))]
    [KnownType(typeof (UpdateNotificationTypesResponse))]
    [KnownType(typeof (DeleteNotificationTypesResponse))]
    [KnownType(typeof (GetAllNotificationsResponse))]
    [KnownType(typeof (GetNotificationsByIdResponse))]
    [KnownType(typeof (GetAllNotificationsForUserResponse))]
    [KnownType(typeof (CreateNewNotificationsResponse))]
    [KnownType(typeof (UpdateNotificationsResponse))]
    [KnownType(typeof (DeleteNotificationsResponse))]
    [KnownType(typeof (GetAllCommentsResponse))]
    [KnownType(typeof (GetAllCommentsForSnippetResponse))]
    [KnownType(typeof (GetCommentByIdResponse))]
    [KnownType(typeof (CreateNewCommentResponse))]
    [KnownType(typeof (UpdateCommentResponse))]
    [KnownType(typeof (DeleteCommentResponse))]
    [KnownType(typeof (GetFilesBySnippetIdResponse))]
    [KnownType(typeof (GetFileByIdResponse))]
    [KnownType(typeof (GetFilesByUserIdResponse))]
    [KnownType(typeof (CreateFileResponse))]
    [KnownType(typeof (UpdateFileResponse))]
    [KnownType(typeof (DeleteFileResponse))]
    [KnownType(typeof (GetHyperlinksBySnippetIdResponse))]
    [KnownType(typeof (GetHyperlinkByIdResponse))]
    [KnownType(typeof (GetHyperlinksByUserIdResponse))]
    [KnownType(typeof (CreateHyperlinkResponse))]
    [KnownType(typeof (UpdateHyperlinkResponse))]
    [KnownType(typeof (DeleteHyperlinkResponse))]
    [KnownType(typeof (GetPagedSnippetListResponse))]
    [KnownType(typeof (GetSnippetByIdResponse))]
    [KnownType(typeof (GetSnippetsByUserIdResponse))]
    [KnownType(typeof (GetSnippetByGuidResponse))]
    [KnownType(typeof (CreateSnippetResponse))]
    [KnownType(typeof (UpdateSnippetResponse))]
    [KnownType(typeof (DeleteSnippetResponse))]
    [KnownType(typeof (GetSnippetsByTitleResponse))]
    [KnownType(typeof (GetSnippetsByDescriptionResponse))]
    [KnownType(typeof (GetSnippetsByDataResponse))]
    [KnownType(typeof (GetAllLanguagesResponse))]
    public class ServiceResponseBase : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private string FailureInformationField;

        private bool SuccessField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public string FailureInformation
        {
            get { return FailureInformationField; }
            set
            {
                if ((ReferenceEquals(FailureInformationField, value) != true))
                {
                    FailureInformationField = value;
                    RaisePropertyChanged("FailureInformation");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public bool Success
        {
            get { return SuccessField; }
            set
            {
                if ((SuccessField.Equals(value) != true))
                {
                    SuccessField = value;
                    RaisePropertyChanged("Success");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetLanguageByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetLanguageByIdResponse : ServiceResponseBase
    {
        [OptionalField] private string DescriptionField;

        private int IdField;

        private string NameField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetLanguageByNameResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetLanguageByNameResponse : ServiceResponseBase
    {
        [OptionalField] private LanguageQuickInfo LanguageField;

        [DataMember]
        public LanguageQuickInfo Language
        {
            get { return LanguageField; }
            set
            {
                if ((ReferenceEquals(LanguageField, value) != true))
                {
                    LanguageField = value;
                    RaisePropertyChanged("Language");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewLanguageResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateNewLanguageResponse : ServiceResponseBase
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        private string NameField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateLanguageResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateLanguageResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteLanguageResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteLanguageResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllUsersResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllUsersResponse : ServiceResponseBase
    {
        [OptionalField] private UserQuickInfo[] UsersField;

        [DataMember]
        public UserQuickInfo[] Users
        {
            get { return UsersField; }
            set
            {
                if ((ReferenceEquals(UsersField, value) != true))
                {
                    UsersField = value;
                    RaisePropertyChanged("Users");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetUserByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetUserByIdResponse : ServiceResponseBase
    {
        [OptionalField] private byte[] AvatarImageField;

        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;

        [OptionalField] private string LoginNameField;

        [DataMember]
        public byte[] AvatarImage
        {
            get { return AvatarImageField; }
            set
            {
                if ((ReferenceEquals(AvatarImageField, value) != true))
                {
                    AvatarImageField = value;
                    RaisePropertyChanged("AvatarImage");
                }
            }
        }

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetUserByNameResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetUserByNameResponse : ServiceResponseBase
    {
        [OptionalField] private byte[] AvatarImageField;

        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;

        [OptionalField] private string LoginNameField;

        [DataMember]
        public byte[] AvatarImage
        {
            get { return AvatarImageField; }
            set
            {
                if ((ReferenceEquals(AvatarImageField, value) != true))
                {
                    AvatarImageField = value;
                    RaisePropertyChanged("AvatarImage");
                }
            }
        }

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewUserResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateNewUserResponse : ServiceResponseBase
    {
        [OptionalField] private byte[] AvatarImageField;

        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;

        [OptionalField] private string LoginNameField;

        [DataMember]
        public byte[] AvatarImage
        {
            get { return AvatarImageField; }
            set
            {
                if ((ReferenceEquals(AvatarImageField, value) != true))
                {
                    AvatarImageField = value;
                    RaisePropertyChanged("AvatarImage");
                }
            }
        }

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateUserResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateUserResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteUserResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteUserResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationTypesResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllNotificationTypesResponse : ServiceResponseBase
    {
        [OptionalField] private NotificationTypeQuickInfo[] NotificationTypesField;

        [DataMember]
        public NotificationTypeQuickInfo[] NotificationTypes
        {
            get { return NotificationTypesField; }
            set
            {
                if ((ReferenceEquals(NotificationTypesField, value) != true))
                {
                    NotificationTypesField = value;
                    RaisePropertyChanged("NotificationTypes");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationTypesByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetNotificationTypesByIdResponse : ServiceResponseBase
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationTypesByNameResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetNotificationTypesByNameResponse : ServiceResponseBase
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewNotificationTypesResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateNewNotificationTypesResponse : ServiceResponseBase
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateNotificationTypesResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateNotificationTypesResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteNotificationTypesResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteNotificationTypesResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationsResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllNotificationsResponse : ServiceResponseBase
    {
        [OptionalField] private NotificationQuickInfo[] NotificationsField;

        [DataMember]
        public NotificationQuickInfo[] Notifications
        {
            get { return NotificationsField; }
            set
            {
                if ((ReferenceEquals(NotificationsField, value) != true))
                {
                    NotificationsField = value;
                    RaisePropertyChanged("Notifications");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationsByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetNotificationsByIdResponse : ServiceResponseBase
    {
        [OptionalField] private int IdField;

        [OptionalField] private int NotificationTypeIdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid UserFormsAuthIdField;

        [OptionalField] private int UserIdField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public int NotificationTypeId
        {
            get { return NotificationTypeIdField; }
            set
            {
                if ((NotificationTypeIdField.Equals(value) != true))
                {
                    NotificationTypeIdField = value;
                    RaisePropertyChanged("NotificationTypeId");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid UserFormsAuthId
        {
            get { return UserFormsAuthIdField; }
            set
            {
                if ((UserFormsAuthIdField.Equals(value) != true))
                {
                    UserFormsAuthIdField = value;
                    RaisePropertyChanged("UserFormsAuthId");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationsForUserResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllNotificationsForUserResponse : ServiceResponseBase
    {
        [OptionalField] private NotificationQuickInfo[] NotificationsField;

        [DataMember]
        public NotificationQuickInfo[] Notifications
        {
            get { return NotificationsField; }
            set
            {
                if ((ReferenceEquals(NotificationsField, value) != true))
                {
                    NotificationsField = value;
                    RaisePropertyChanged("Notifications");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewNotificationsResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateNewNotificationsResponse : ServiceResponseBase
    {
        [OptionalField] private int IdField;

        [OptionalField] private int NotificationTypeIdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid UserFormsAuthIdField;

        [OptionalField] private int UserIdField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public int NotificationTypeId
        {
            get { return NotificationTypeIdField; }
            set
            {
                if ((NotificationTypeIdField.Equals(value) != true))
                {
                    NotificationTypeIdField = value;
                    RaisePropertyChanged("NotificationTypeId");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid UserFormsAuthId
        {
            get { return UserFormsAuthIdField; }
            set
            {
                if ((UserFormsAuthIdField.Equals(value) != true))
                {
                    UserFormsAuthIdField = value;
                    RaisePropertyChanged("UserFormsAuthId");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateNotificationsResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateNotificationsResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteNotificationsResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteNotificationsResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllCommentsResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllCommentsResponse : ServiceResponseBase
    {
        [OptionalField] private CommentQuickInfo[] CommentsField;

        [DataMember]
        public CommentQuickInfo[] Comments
        {
            get { return CommentsField; }
            set
            {
                if ((ReferenceEquals(CommentsField, value) != true))
                {
                    CommentsField = value;
                    RaisePropertyChanged("Comments");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllCommentsForSnippetResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllCommentsForSnippetResponse : ServiceResponseBase
    {
        [OptionalField] private CommentQuickInfo[] CommentsField;

        [OptionalField] private int SnippetIdField;

        [DataMember]
        public CommentQuickInfo[] Comments
        {
            get { return CommentsField; }
            set
            {
                if ((ReferenceEquals(CommentsField, value) != true))
                {
                    CommentsField = value;
                    RaisePropertyChanged("Comments");
                }
            }
        }

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetCommentByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetCommentByIdResponse : ServiceResponseBase
    {
        [OptionalField] private DateTime DateLastModifiedField;

        [OptionalField] private int IdField;

        [OptionalField] private int SnippetIdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid UserFormsAuthIdField;

        [OptionalField] private int UserIdField;

        [DataMember]
        public DateTime DateLastModified
        {
            get { return DateLastModifiedField; }
            set
            {
                if ((DateLastModifiedField.Equals(value) != true))
                {
                    DateLastModifiedField = value;
                    RaisePropertyChanged("DateLastModified");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid UserFormsAuthId
        {
            get { return UserFormsAuthIdField; }
            set
            {
                if ((UserFormsAuthIdField.Equals(value) != true))
                {
                    UserFormsAuthIdField = value;
                    RaisePropertyChanged("UserFormsAuthId");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewCommentResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateNewCommentResponse : ServiceResponseBase
    {
        [OptionalField] private DateTime DateLastModifiedField;

        [OptionalField] private int IdField;

        [OptionalField] private int SnippetIdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid UserFormsAuthIdField;

        [OptionalField] private int UserIdField;

        [DataMember]
        public DateTime DateLastModified
        {
            get { return DateLastModifiedField; }
            set
            {
                if ((DateLastModifiedField.Equals(value) != true))
                {
                    DateLastModifiedField = value;
                    RaisePropertyChanged("DateLastModified");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid UserFormsAuthId
        {
            get { return UserFormsAuthIdField; }
            set
            {
                if ((UserFormsAuthIdField.Equals(value) != true))
                {
                    UserFormsAuthIdField = value;
                    RaisePropertyChanged("UserFormsAuthId");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateCommentResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateCommentResponse : ServiceResponseBase
    {
        [OptionalField] private DateTime DateLastModifiedField;

        [OptionalField] private int IdField;

        [OptionalField] private string TextField;

        [DataMember]
        public DateTime DateLastModified
        {
            get { return DateLastModifiedField; }
            set
            {
                if ((DateLastModifiedField.Equals(value) != true))
                {
                    DateLastModifiedField = value;
                    RaisePropertyChanged("DateLastModified");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteCommentResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteCommentResponse : ServiceResponseBase
    {
        [OptionalField] private int IdField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFilesBySnippetIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetFilesBySnippetIdResponse : ServiceResponseBase
    {
        [OptionalField] private FileDTO[] FilesField;

        [DataMember]
        public FileDTO[] Files
        {
            get { return FilesField; }
            set
            {
                if ((ReferenceEquals(FilesField, value) != true))
                {
                    FilesField = value;
                    RaisePropertyChanged("Files");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFileByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetFileByIdResponse : ServiceResponseBase
    {
        [OptionalField] private FileDTO FileField;

        [DataMember]
        public FileDTO File
        {
            get { return FileField; }
            set
            {
                if ((ReferenceEquals(FileField, value) != true))
                {
                    FileField = value;
                    RaisePropertyChanged("File");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFilesByUserIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetFilesByUserIdResponse : ServiceResponseBase
    {
        [OptionalField] private FileDTO[] FilesField;

        [DataMember]
        public FileDTO[] Files
        {
            get { return FilesField; }
            set
            {
                if ((ReferenceEquals(FilesField, value) != true))
                {
                    FilesField = value;
                    RaisePropertyChanged("Files");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateFileResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateFileResponse : ServiceResponseBase
    {
        [OptionalField] private int FileIdField;

        [DataMember]
        public int FileId
        {
            get { return FileIdField; }
            set
            {
                if ((FileIdField.Equals(value) != true))
                {
                    FileIdField = value;
                    RaisePropertyChanged("FileId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateFileResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateFileResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteFileResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteFileResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinksBySnippetIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetHyperlinksBySnippetIdResponse : ServiceResponseBase
    {
        [OptionalField] private HyperlinkDTO[] HyperlinksField;

        [DataMember]
        public HyperlinkDTO[] Hyperlinks
        {
            get { return HyperlinksField; }
            set
            {
                if ((ReferenceEquals(HyperlinksField, value) != true))
                {
                    HyperlinksField = value;
                    RaisePropertyChanged("Hyperlinks");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinkByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetHyperlinkByIdResponse : ServiceResponseBase
    {
        [OptionalField] private HyperlinkDTO HyperlinkField;

        [DataMember]
        public HyperlinkDTO Hyperlink
        {
            get { return HyperlinkField; }
            set
            {
                if ((ReferenceEquals(HyperlinkField, value) != true))
                {
                    HyperlinkField = value;
                    RaisePropertyChanged("Hyperlink");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinksByUserIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetHyperlinksByUserIdResponse : ServiceResponseBase
    {
        [OptionalField] private HyperlinkDTO[] HyperlinksField;

        [DataMember]
        public HyperlinkDTO[] Hyperlinks
        {
            get { return HyperlinksField; }
            set
            {
                if ((ReferenceEquals(HyperlinksField, value) != true))
                {
                    HyperlinksField = value;
                    RaisePropertyChanged("Hyperlinks");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateHyperlinkResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateHyperlinkResponse : ServiceResponseBase
    {
        [OptionalField] private int HyperlinkIdField;

        [DataMember]
        public int HyperlinkId
        {
            get { return HyperlinkIdField; }
            set
            {
                if ((HyperlinkIdField.Equals(value) != true))
                {
                    HyperlinkIdField = value;
                    RaisePropertyChanged("HyperlinkId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateHyperlinkResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UpdateHyperlinkResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteHyperlinkResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteHyperlinkResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetPagedSnippetListResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetPagedSnippetListResponse : ServiceResponseBase
    {
        private SnippetDTO[] SnippetsField;

        [DataMember(IsRequired = true)]
        public SnippetDTO[] Snippets
        {
            get { return SnippetsField; }
            set
            {
                if ((ReferenceEquals(SnippetsField, value) != true))
                {
                    SnippetsField = value;
                    RaisePropertyChanged("Snippets");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetByIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetByIdResponse : ServiceResponseBase
    {
        private SnippetDTO SnippetField;

        [DataMember(IsRequired = true)]
        public SnippetDTO Snippet
        {
            get { return SnippetField; }
            set
            {
                if ((ReferenceEquals(SnippetField, value) != true))
                {
                    SnippetField = value;
                    RaisePropertyChanged("Snippet");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByUserIdResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetsByUserIdResponse : ServiceResponseBase
    {
        [OptionalField] private Guid GuidField;

        [OptionalField] private string NameField;

        [OptionalField] private SnippetDTO[] SnippetsField;

        [DataMember]
        public Guid Guid
        {
            get { return GuidField; }
            set
            {
                if ((GuidField.Equals(value) != true))
                {
                    GuidField = value;
                    RaisePropertyChanged("Guid");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        [DataMember]
        public SnippetDTO[] Snippets
        {
            get { return SnippetsField; }
            set
            {
                if ((ReferenceEquals(SnippetsField, value) != true))
                {
                    SnippetsField = value;
                    RaisePropertyChanged("Snippets");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetByGuidResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetByGuidResponse : ServiceResponseBase
    {
        private SnippetDTO SnippetField;

        [DataMember(IsRequired = true)]
        public SnippetDTO Snippet
        {
            get { return SnippetField; }
            set
            {
                if ((ReferenceEquals(SnippetField, value) != true))
                {
                    SnippetField = value;
                    RaisePropertyChanged("Snippet");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateSnippetResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CreateSnippetResponse : ServiceResponseBase
    {
        [OptionalField] private int SnippetIdField;

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateSnippetResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    [KnownType(typeof (GetAllLanguagesResponse))]
    [KnownType(typeof (ServiceResponseBase))]
    [KnownType(typeof (LanguageQuickInfo[]))]
    [KnownType(typeof (LanguageQuickInfo))]
    [KnownType(typeof (GetLanguageByIdResponse))]
    [KnownType(typeof (GetLanguageByNameResponse))]
    [KnownType(typeof (CreateNewLanguageResponse))]
    [KnownType(typeof (UpdateLanguageResponse))]
    [KnownType(typeof (DeleteLanguageResponse))]
    [KnownType(typeof (GetAllUsersResponse))]
    [KnownType(typeof (UserQuickInfo[]))]
    [KnownType(typeof (UserQuickInfo))]
    [KnownType(typeof (GetUserByIdResponse))]
    [KnownType(typeof (GetUserByNameResponse))]
    [KnownType(typeof (CreateNewUserResponse))]
    [KnownType(typeof (UpdateUserResponse))]
    [KnownType(typeof (DeleteUserResponse))]
    [KnownType(typeof (GetAllNotificationTypesResponse))]
    [KnownType(typeof (GetNotificationTypesByIdResponse))]
    [KnownType(typeof (GetNotificationTypesByNameResponse))]
    [KnownType(typeof (CreateNewNotificationTypesResponse))]
    [KnownType(typeof (UpdateNotificationTypesResponse))]
    [KnownType(typeof (DeleteNotificationTypesResponse))]
    [KnownType(typeof (GetAllNotificationsResponse))]
    [KnownType(typeof (NotificationQuickInfo[]))]
    [KnownType(typeof (NotificationQuickInfo))]
    [KnownType(typeof (GetNotificationsByIdResponse))]
    [KnownType(typeof (GetAllNotificationsForUserResponse))]
    [KnownType(typeof (CreateNewNotificationsResponse))]
    [KnownType(typeof (UpdateNotificationsResponse))]
    [KnownType(typeof (DeleteNotificationsResponse))]
    [KnownType(typeof (GetAllCommentsResponse))]
    [KnownType(typeof (CommentQuickInfo[]))]
    [KnownType(typeof (CommentQuickInfo))]
    [KnownType(typeof (GetAllCommentsForSnippetResponse))]
    [KnownType(typeof (GetCommentByIdResponse))]
    [KnownType(typeof (CreateNewCommentResponse))]
    [KnownType(typeof (UpdateCommentResponse))]
    [KnownType(typeof (DeleteCommentResponse))]
    [KnownType(typeof (GetFilesBySnippetIdResponse))]
    [KnownType(typeof (GetFileByIdResponse))]
    [KnownType(typeof (GetFilesByUserIdResponse))]
    [KnownType(typeof (CreateFileResponse))]
    [KnownType(typeof (UpdateFileResponse))]
    [KnownType(typeof (DeleteFileResponse))]
    [KnownType(typeof (GetHyperlinksBySnippetIdResponse))]
    [KnownType(typeof (GetHyperlinkByIdResponse))]
    [KnownType(typeof (GetHyperlinksByUserIdResponse))]
    [KnownType(typeof (CreateHyperlinkResponse))]
    [KnownType(typeof (UpdateHyperlinkResponse))]
    [KnownType(typeof (DeleteHyperlinkResponse))]
    [KnownType(typeof (GetPagedSnippetListResponse))]
    [KnownType(typeof (GetSnippetByIdResponse))]
    [KnownType(typeof (GetSnippetsByUserIdResponse))]
    [KnownType(typeof (GetSnippetByGuidResponse))]
    [KnownType(typeof (CreateSnippetResponse))]
    [KnownType(typeof (DeleteSnippetResponse))]
    [KnownType(typeof (GetSnippetsByTitleResponse))]
    [KnownType(typeof (GetSnippetsByDescriptionResponse))]
    [KnownType(typeof (GetSnippetsByDataResponse))]
    [KnownType(typeof (GetAllLanguagesRequest))]
    [KnownType(typeof (GetLanguageByIdRequest))]
    [KnownType(typeof (GetLanguageByNameRequest))]
    [KnownType(typeof (CreateNewLanguageRequest))]
    [KnownType(typeof (UpdateLanguageRequest))]
    [KnownType(typeof (DeleteLanguageRequest))]
    [KnownType(typeof (GetAllUsersRequest))]
    [KnownType(typeof (GetUserByIdRequest))]
    [KnownType(typeof (GetUserByNameRequest))]
    [KnownType(typeof (CreateNewUserRequest))]
    [KnownType(typeof (UpdateUserRequest))]
    [KnownType(typeof (DeleteUserRequest))]
    [KnownType(typeof (GetAllNotificationTypesRequest))]
    [KnownType(typeof (NotificationTypeQuickInfo[]))]
    [KnownType(typeof (NotificationTypeQuickInfo))]
    [KnownType(typeof (GetNotificationTypesByIdRequest))]
    [KnownType(typeof (GetNotificationTypesByNameRequest))]
    [KnownType(typeof (CreateNewNotificationTypesRequest))]
    [KnownType(typeof (UpdateNotificationTypesRequest))]
    [KnownType(typeof (DeleteNotificationTypesRequest))]
    [KnownType(typeof (GetAllNotificationsRequest))]
    [KnownType(typeof (GetNotificationsByIdRequest))]
    [KnownType(typeof (GetAllNotificationsForUserRequest))]
    [KnownType(typeof (CreateNewNotificationsRequest))]
    [KnownType(typeof (UpdateNotificationsRequest))]
    [KnownType(typeof (DeleteNotificationsRequest))]
    [KnownType(typeof (GetAllCommentsRequest))]
    [KnownType(typeof (GetAllCommentsForSnippetRequest))]
    [KnownType(typeof (GetCommentByIdRequest))]
    [KnownType(typeof (CreateNewCommentRequest))]
    [KnownType(typeof (UpdateCommentRequest))]
    [KnownType(typeof (DeleteCommentRequest))]
    [KnownType(typeof (GetFilesBySnippetIdRequest))]
    [KnownType(typeof (GetFileByIdRequest))]
    [KnownType(typeof (GetFilesByUserIdRequest))]
    [KnownType(typeof (CreateFileRequest))]
    [KnownType(typeof (UpdateFileRequest))]
    [KnownType(typeof (DeleteFileRequest))]
    [KnownType(typeof (GetHyperlinksBySnippetIdRequest))]
    [KnownType(typeof (GetHyperlinkByIdRequest))]
    [KnownType(typeof (GetHyperlinksByUserIdRequest))]
    [KnownType(typeof (CreateHyperlinkRequest))]
    [KnownType(typeof (UpdateHyperlinkRequest))]
    [KnownType(typeof (DeleteHyperlinkRequest))]
    [KnownType(typeof (GetPagedSnippetListRequest))]
    [KnownType(typeof (GetSnippetByIdRequest))]
    [KnownType(typeof (GetSnippetsByUserIdRequest))]
    [KnownType(typeof (GetSnippetByGuidRequest))]
    [KnownType(typeof (CreateSnippetRequest))]
    [KnownType(typeof (UpdateSnippetRequest))]
    [KnownType(typeof (DeleteSnippetRequest))]
    [KnownType(typeof (GetSnippetsByTitleRequest))]
    [KnownType(typeof (GetSnippetsByDescriptionRequest))]
    [KnownType(typeof (GetSnippetsByDataRequest))]
    [KnownType(typeof (FileDTO[]))]
    [KnownType(typeof (FileDTO))]
    [KnownType(typeof (HyperlinkDTO[]))]
    [KnownType(typeof (HyperlinkDTO))]
    [KnownType(typeof (SnippetDTO[]))]
    [KnownType(typeof (SnippetDTO))]
    public class UpdateSnippetResponse : ServiceResponseBase
    {
        [OptionalField] private object SnippetField;

        [DataMember]
        public object Snippet
        {
            get { return SnippetField; }
            set
            {
                if ((ReferenceEquals(SnippetField, value) != true))
                {
                    SnippetField = value;
                    RaisePropertyChanged("Snippet");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteSnippetResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class DeleteSnippetResponse : ServiceResponseBase
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByTitleResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetsByTitleResponse : ServiceResponseBase
    {
        [OptionalField] private SnippetDTO[] SnippetsField;

        [DataMember]
        public SnippetDTO[] Snippets
        {
            get { return SnippetsField; }
            set
            {
                if ((ReferenceEquals(SnippetsField, value) != true))
                {
                    SnippetsField = value;
                    RaisePropertyChanged("Snippets");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByDescriptionResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetsByDescriptionResponse : ServiceResponseBase
    {
        [OptionalField] private SnippetDTO[] SnippetsField;

        [DataMember]
        public SnippetDTO[] Snippets
        {
            get { return SnippetsField; }
            set
            {
                if ((ReferenceEquals(SnippetsField, value) != true))
                {
                    SnippetsField = value;
                    RaisePropertyChanged("Snippets");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByDataResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetSnippetsByDataResponse : ServiceResponseBase
    {
        [OptionalField] private SnippetDTO[] SnippetsField;

        [DataMember]
        public SnippetDTO[] Snippets
        {
            get { return SnippetsField; }
            set
            {
                if ((ReferenceEquals(SnippetsField, value) != true))
                {
                    SnippetsField = value;
                    RaisePropertyChanged("Snippets");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllLanguagesResponse",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class GetAllLanguagesResponse : ServiceResponseBase
    {
        private LanguageQuickInfo[] LanguagesField;

        [DataMember(IsRequired = true)]
        public LanguageQuickInfo[] Languages
        {
            get { return LanguagesField; }
            set
            {
                if ((ReferenceEquals(LanguagesField, value) != true))
                {
                    LanguagesField = value;
                    RaisePropertyChanged("Languages");
                }
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "LanguageQuickInfo",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class LanguageQuickInfo : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        private int IdField;

        private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UserQuickInfo",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class UserQuickInfo : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;

        [OptionalField] private string LoginNameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "NotificationTypeQuickInfo",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class NotificationTypeQuickInfo : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "NotificationQuickInfo",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class NotificationQuickInfo : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private DateTime DateCreatedField;

        [OptionalField] private int IdField;

        [OptionalField] private string TextField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public DateTime DateCreated
        {
            get { return DateCreatedField; }
            set
            {
                if ((DateCreatedField.Equals(value) != true))
                {
                    DateCreatedField = value;
                    RaisePropertyChanged("DateCreated");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CommentQuickInfo",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Responses")]
    [Serializable]
    public class CommentQuickInfo : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private DateTime DataLastModifiedField;

        [OptionalField] private int IdField;

        [OptionalField] private string TextField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public DateTime DataLastModified
        {
            get { return DataLastModifiedField; }
            set
            {
                if ((DataLastModifiedField.Equals(value) != true))
                {
                    DataLastModifiedField = value;
                    RaisePropertyChanged("DataLastModified");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetLanguageByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetLanguageByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetLanguageByNameRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetLanguageByNameRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewLanguageRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateNewLanguageRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateLanguageRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateLanguageRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteLanguageRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteLanguageRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllUsersRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllUsersRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [NonSerialized] private ExtensionDataObject extensionDataField;

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetUserByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetUserByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetUserByNameRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetUserByNameRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string LoginNameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewUserRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateNewUserRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private byte[] AvatarImageField;

        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private string LoginNameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public byte[] AvatarImage
        {
            get { return AvatarImageField; }
            set
            {
                if ((ReferenceEquals(AvatarImageField, value) != true))
                {
                    AvatarImageField = value;
                    RaisePropertyChanged("AvatarImage");
                }
            }
        }

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateUserRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateUserRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private byte[] AvatarImageField;

        [OptionalField] private string EmailField;

        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;

        [OptionalField] private string LoginNameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public byte[] AvatarImage
        {
            get { return AvatarImageField; }
            set
            {
                if ((ReferenceEquals(AvatarImageField, value) != true))
                {
                    AvatarImageField = value;
                    RaisePropertyChanged("AvatarImage");
                }
            }
        }

        [DataMember]
        public string Email
        {
            get { return EmailField; }
            set
            {
                if ((ReferenceEquals(EmailField, value) != true))
                {
                    EmailField = value;
                    RaisePropertyChanged("Email");
                }
            }
        }

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string LoginName
        {
            get { return LoginNameField; }
            set
            {
                if ((ReferenceEquals(LoginNameField, value) != true))
                {
                    LoginNameField = value;
                    RaisePropertyChanged("LoginName");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteUserRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteUserRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private Guid FormsAuthIdField;

        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public Guid FormsAuthId
        {
            get { return FormsAuthIdField; }
            set
            {
                if ((FormsAuthIdField.Equals(value) != true))
                {
                    FormsAuthIdField = value;
                    RaisePropertyChanged("FormsAuthId");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationTypesRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllNotificationTypesRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [NonSerialized] private ExtensionDataObject extensionDataField;

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationTypesByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetNotificationTypesByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationTypesByNameRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetNotificationTypesByNameRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewNotificationTypesRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateNewNotificationTypesRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateNotificationTypesRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateNotificationTypesRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private int IdField;

        [OptionalField] private string NameField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteNotificationTypesRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteNotificationTypesRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationsRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllNotificationsRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [NonSerialized] private ExtensionDataObject extensionDataField;

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetNotificationsByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetNotificationsByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllNotificationsForUserRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllNotificationsForUserRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private Guid UserGuidField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewNotificationsRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateNewNotificationsRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int Notification_Type_IdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid User_Forms_AuthIdField;

        [OptionalField] private int User_IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Notification_Type_Id
        {
            get { return Notification_Type_IdField; }
            set
            {
                if ((Notification_Type_IdField.Equals(value) != true))
                {
                    Notification_Type_IdField = value;
                    RaisePropertyChanged("Notification_Type_Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid User_Forms_AuthId
        {
            get { return User_Forms_AuthIdField; }
            set
            {
                if ((User_Forms_AuthIdField.Equals(value) != true))
                {
                    User_Forms_AuthIdField = value;
                    RaisePropertyChanged("User_Forms_AuthId");
                }
            }
        }

        [DataMember]
        public int User_Id
        {
            get { return User_IdField; }
            set
            {
                if ((User_IdField.Equals(value) != true))
                {
                    User_IdField = value;
                    RaisePropertyChanged("User_Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateNotificationsRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateNotificationsRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;

        [OptionalField] private int Notification_Type_IdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid User_Forms_AuthIdField;

        [OptionalField] private int User_IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public int Notification_Type_Id
        {
            get { return Notification_Type_IdField; }
            set
            {
                if ((Notification_Type_IdField.Equals(value) != true))
                {
                    Notification_Type_IdField = value;
                    RaisePropertyChanged("Notification_Type_Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid User_Forms_AuthId
        {
            get { return User_Forms_AuthIdField; }
            set
            {
                if ((User_Forms_AuthIdField.Equals(value) != true))
                {
                    User_Forms_AuthIdField = value;
                    RaisePropertyChanged("User_Forms_AuthId");
                }
            }
        }

        [DataMember]
        public int User_Id
        {
            get { return User_IdField; }
            set
            {
                if ((User_IdField.Equals(value) != true))
                {
                    User_IdField = value;
                    RaisePropertyChanged("User_Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteNotificationsRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteNotificationsRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllCommentsRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllCommentsRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [NonSerialized] private ExtensionDataObject extensionDataField;

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetAllCommentsForSnippetRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetAllCommentsForSnippetRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int SnippetIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetCommentByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetCommentByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateNewCommentRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateNewCommentRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private DateTime DateLastModifiedField;

        [OptionalField] private int SnippetIdField;

        [OptionalField] private string TextField;

        [OptionalField] private Guid UserFormsAuthIdField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public DateTime DateLastModified
        {
            get { return DateLastModifiedField; }
            set
            {
                if ((DateLastModifiedField.Equals(value) != true))
                {
                    DateLastModifiedField = value;
                    RaisePropertyChanged("DateLastModified");
                }
            }
        }

        [DataMember]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        [DataMember]
        public Guid UserFormsAuthId
        {
            get { return UserFormsAuthIdField; }
            set
            {
                if ((UserFormsAuthIdField.Equals(value) != true))
                {
                    UserFormsAuthIdField = value;
                    RaisePropertyChanged("UserFormsAuthId");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateCommentRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateCommentRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private DateTime DateLastModifiedField;

        [OptionalField] private int IdField;

        [OptionalField] private string TextField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public DateTime DateLastModified
        {
            get { return DateLastModifiedField; }
            set
            {
                if ((DateLastModifiedField.Equals(value) != true))
                {
                    DateLastModifiedField = value;
                    RaisePropertyChanged("DateLastModified");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public string Text
        {
            get { return TextField; }
            set
            {
                if ((ReferenceEquals(TextField, value) != true))
                {
                    TextField = value;
                    RaisePropertyChanged("Text");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteCommentRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteCommentRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFilesBySnippetIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetFilesBySnippetIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private Guid SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public Guid SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFileByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetFileByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private int FileIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public int FileId
        {
            get { return FileIdField; }
            set
            {
                if ((FileIdField.Equals(value) != true))
                {
                    FileIdField = value;
                    RaisePropertyChanged("FileId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetFilesByUserIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetFilesByUserIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private int SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateFileRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateFileRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private byte[] DataField;

        [OptionalField] private string DescriptionField;

        [OptionalField] private DateTime LastModifiedField;

        private string NameField;

        private int SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public byte[] Data
        {
            get { return DataField; }
            set
            {
                if ((ReferenceEquals(DataField, value) != true))
                {
                    DataField = value;
                    RaisePropertyChanged("Data");
                }
            }
        }

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateFileRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateFileRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private byte[] DataField;

        [OptionalField] private string DescriptionField;

        [OptionalField] private DateTime LastModifiedField;

        private string NameField;

        private int SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public byte[] Data
        {
            get { return DataField; }
            set
            {
                if ((ReferenceEquals(DataField, value) != true))
                {
                    DataField = value;
                    RaisePropertyChanged("Data");
                }
            }
        }

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteFileRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteFileRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int FileIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int FileId
        {
            get { return FileIdField; }
            set
            {
                if ((FileIdField.Equals(value) != true))
                {
                    FileIdField = value;
                    RaisePropertyChanged("FileId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinksBySnippetIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetHyperlinksBySnippetIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private Guid SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public Guid SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinkByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetHyperlinkByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private int HyperlinkIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public int HyperlinkId
        {
            get { return HyperlinkIdField; }
            set
            {
                if ((HyperlinkIdField.Equals(value) != true))
                {
                    HyperlinkIdField = value;
                    RaisePropertyChanged("HyperlinkId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetHyperlinksByUserIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetHyperlinksByUserIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private int SnippetIdField;

        private Guid UserGuidField;

        private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateHyperlinkRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateHyperlinkRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        [OptionalField] private DateTime LastModifiedField;

        private int SnippetIdField;

        private string UriField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int SnippetId
        {
            get { return SnippetIdField; }
            set
            {
                if ((SnippetIdField.Equals(value) != true))
                {
                    SnippetIdField = value;
                    RaisePropertyChanged("SnippetId");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Uri
        {
            get { return UriField; }
            set
            {
                if ((ReferenceEquals(UriField, value) != true))
                {
                    UriField = value;
                    RaisePropertyChanged("Uri");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateHyperlinkRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateHyperlinkRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private string DescriptionField;

        private int HyperlinkIdField;

        [OptionalField] private DateTime LastModifiedField;

        private string UriField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public int HyperlinkId
        {
            get { return HyperlinkIdField; }
            set
            {
                if ((HyperlinkIdField.Equals(value) != true))
                {
                    HyperlinkIdField = value;
                    RaisePropertyChanged("HyperlinkId");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember(IsRequired = true)]
        public string Uri
        {
            get { return UriField; }
            set
            {
                if ((ReferenceEquals(UriField, value) != true))
                {
                    UriField = value;
                    RaisePropertyChanged("Uri");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteHyperlinkRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteHyperlinkRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private int HyperlinkIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public int HyperlinkId
        {
            get { return HyperlinkIdField; }
            set
            {
                if ((HyperlinkIdField.Equals(value) != true))
                {
                    HyperlinkIdField = value;
                    RaisePropertyChanged("HyperlinkId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetPagedSnippetListRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetPagedSnippetListRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int CurrentPageField;

        [OptionalField] private bool IncludePrivateField;

        [OptionalField] private int SnippetsPerPageField;

        [OptionalField] private Guid UserGuidField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int CurrentPage
        {
            get { return CurrentPageField; }
            set
            {
                if ((CurrentPageField.Equals(value) != true))
                {
                    CurrentPageField = value;
                    RaisePropertyChanged("CurrentPage");
                }
            }
        }

        [DataMember]
        public bool IncludePrivate
        {
            get { return IncludePrivateField; }
            set
            {
                if ((IncludePrivateField.Equals(value) != true))
                {
                    IncludePrivateField = value;
                    RaisePropertyChanged("IncludePrivate");
                }
            }
        }

        [DataMember]
        public int SnippetsPerPage
        {
            get { return SnippetsPerPageField; }
            set
            {
                if ((SnippetsPerPageField.Equals(value) != true))
                {
                    SnippetsPerPageField = value;
                    RaisePropertyChanged("SnippetsPerPage");
                }
            }
        }

        [DataMember]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetByIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetByIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByUserIdRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetsByUserIdRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int UserIdField;

        [OptionalField] private Guid User_FormsAuthIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        [DataMember]
        public Guid User_FormsAuthId
        {
            get { return User_FormsAuthIdField; }
            set
            {
                if ((User_FormsAuthIdField.Equals(value) != true))
                {
                    User_FormsAuthIdField = value;
                    RaisePropertyChanged("User_FormsAuthId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetByGuidRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetByGuidRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private Guid GuidField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public Guid Guid
        {
            get { return GuidField; }
            set
            {
                if ((GuidField.Equals(value) != true))
                {
                    GuidField = value;
                    RaisePropertyChanged("Guid");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "CreateSnippetRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class CreateSnippetRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private byte[] DataField;

        [OptionalField] private string DescriptionField;

        [OptionalField] private Guid GuidField;

        [OptionalField] private int IdField;

        [OptionalField] private bool IsPublicField;

        [OptionalField] private int Language_IdField;

        [OptionalField] private DateTime LastModifiedField;

        [OptionalField] private string NameField;

        [OptionalField] private byte[] PreviewDataField;

        [OptionalField] private Guid User_FormsAuthIdField;

        [OptionalField] private int User_IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public byte[] Data
        {
            get { return DataField; }
            set
            {
                if ((ReferenceEquals(DataField, value) != true))
                {
                    DataField = value;
                    RaisePropertyChanged("Data");
                }
            }
        }

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public Guid Guid
        {
            get { return GuidField; }
            set
            {
                if ((GuidField.Equals(value) != true))
                {
                    GuidField = value;
                    RaisePropertyChanged("Guid");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public bool IsPublic
        {
            get { return IsPublicField; }
            set
            {
                if ((IsPublicField.Equals(value) != true))
                {
                    IsPublicField = value;
                    RaisePropertyChanged("IsPublic");
                }
            }
        }

        [DataMember]
        public int Language_Id
        {
            get { return Language_IdField; }
            set
            {
                if ((Language_IdField.Equals(value) != true))
                {
                    Language_IdField = value;
                    RaisePropertyChanged("Language_Id");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        [DataMember]
        public byte[] PreviewData
        {
            get { return PreviewDataField; }
            set
            {
                if ((ReferenceEquals(PreviewDataField, value) != true))
                {
                    PreviewDataField = value;
                    RaisePropertyChanged("PreviewData");
                }
            }
        }

        [DataMember]
        public Guid User_FormsAuthId
        {
            get { return User_FormsAuthIdField; }
            set
            {
                if ((User_FormsAuthIdField.Equals(value) != true))
                {
                    User_FormsAuthIdField = value;
                    RaisePropertyChanged("User_FormsAuthId");
                }
            }
        }

        [DataMember]
        public int User_Id
        {
            get { return User_IdField; }
            set
            {
                if ((User_IdField.Equals(value) != true))
                {
                    User_IdField = value;
                    RaisePropertyChanged("User_Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "UpdateSnippetRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class UpdateSnippetRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private byte[] DataField;

        [OptionalField] private string DescriptionField;

        [OptionalField] private Guid GuidField;

        [OptionalField] private int IdField;

        [OptionalField] private bool IsPublicField;

        [OptionalField] private int Language_IdField;

        [OptionalField] private DateTime LastModifiedField;

        [OptionalField] private string NameField;

        [OptionalField] private byte[] PreviewDataField;

        [OptionalField] private Guid User_FormsAuthIdField;

        [OptionalField] private int User_IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public byte[] Data
        {
            get { return DataField; }
            set
            {
                if ((ReferenceEquals(DataField, value) != true))
                {
                    DataField = value;
                    RaisePropertyChanged("Data");
                }
            }
        }

        [DataMember]
        public string Description
        {
            get { return DescriptionField; }
            set
            {
                if ((ReferenceEquals(DescriptionField, value) != true))
                {
                    DescriptionField = value;
                    RaisePropertyChanged("Description");
                }
            }
        }

        [DataMember]
        public Guid Guid
        {
            get { return GuidField; }
            set
            {
                if ((GuidField.Equals(value) != true))
                {
                    GuidField = value;
                    RaisePropertyChanged("Guid");
                }
            }
        }

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        [DataMember]
        public bool IsPublic
        {
            get { return IsPublicField; }
            set
            {
                if ((IsPublicField.Equals(value) != true))
                {
                    IsPublicField = value;
                    RaisePropertyChanged("IsPublic");
                }
            }
        }

        [DataMember]
        public int Language_Id
        {
            get { return Language_IdField; }
            set
            {
                if ((Language_IdField.Equals(value) != true))
                {
                    Language_IdField = value;
                    RaisePropertyChanged("Language_Id");
                }
            }
        }

        [DataMember]
        public DateTime LastModified
        {
            get { return LastModifiedField; }
            set
            {
                if ((LastModifiedField.Equals(value) != true))
                {
                    LastModifiedField = value;
                    RaisePropertyChanged("LastModified");
                }
            }
        }

        [DataMember]
        public string Name
        {
            get { return NameField; }
            set
            {
                if ((ReferenceEquals(NameField, value) != true))
                {
                    NameField = value;
                    RaisePropertyChanged("Name");
                }
            }
        }

        [DataMember]
        public byte[] PreviewData
        {
            get { return PreviewDataField; }
            set
            {
                if ((ReferenceEquals(PreviewDataField, value) != true))
                {
                    PreviewDataField = value;
                    RaisePropertyChanged("PreviewData");
                }
            }
        }

        [DataMember]
        public Guid User_FormsAuthId
        {
            get { return User_FormsAuthIdField; }
            set
            {
                if ((User_FormsAuthIdField.Equals(value) != true))
                {
                    User_FormsAuthIdField = value;
                    RaisePropertyChanged("User_FormsAuthId");
                }
            }
        }

        [DataMember]
        public int User_Id
        {
            get { return User_IdField; }
            set
            {
                if ((User_IdField.Equals(value) != true))
                {
                    User_IdField = value;
                    RaisePropertyChanged("User_Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "DeleteSnippetRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class DeleteSnippetRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        [OptionalField] private int IdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember]
        public int Id
        {
            get { return IdField; }
            set
            {
                if ((IdField.Equals(value) != true))
                {
                    IdField = value;
                    RaisePropertyChanged("Id");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByTitleRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetsByTitleRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private string TitleTextField;

        [OptionalField] private Guid UserGuidField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public string TitleText
        {
            get { return TitleTextField; }
            set
            {
                if ((ReferenceEquals(TitleTextField, value) != true))
                {
                    TitleTextField = value;
                    RaisePropertyChanged("TitleText");
                }
            }
        }

        [DataMember]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByDescriptionRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetsByDescriptionRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private string DescriptionTextField;

        [OptionalField] private Guid UserGuidField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public string DescriptionText
        {
            get { return DescriptionTextField; }
            set
            {
                if ((ReferenceEquals(DescriptionTextField, value) != true))
                {
                    DescriptionTextField = value;
                    RaisePropertyChanged("DescriptionText");
                }
            }
        }

        [DataMember]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.Runtime.Serialization", "4.0.0.0")]
    [DataContract(Name = "GetSnippetsByDataRequest",
        Namespace = "http://schemas.datacontract.org/2004/07/SnippetCache.Data.Wcf.Requests")]
    [Serializable]
    public class GetSnippetsByDataRequest : object, IExtensibleDataObject, INotifyPropertyChanged
    {
        private string DataStringField;

        [OptionalField] private Guid UserGuidField;

        [OptionalField] private int UserIdField;
        [NonSerialized] private ExtensionDataObject extensionDataField;

        [DataMember(IsRequired = true)]
        public string DataString
        {
            get { return DataStringField; }
            set
            {
                if ((ReferenceEquals(DataStringField, value) != true))
                {
                    DataStringField = value;
                    RaisePropertyChanged("DataString");
                }
            }
        }

        [DataMember]
        public Guid UserGuid
        {
            get { return UserGuidField; }
            set
            {
                if ((UserGuidField.Equals(value) != true))
                {
                    UserGuidField = value;
                    RaisePropertyChanged("UserGuid");
                }
            }
        }

        [DataMember]
        public int UserId
        {
            get { return UserIdField; }
            set
            {
                if ((UserIdField.Equals(value) != true))
                {
                    UserIdField = value;
                    RaisePropertyChanged("UserId");
                }
            }
        }

        #region IExtensibleDataObject Members

        [Browsable(false)]
        public ExtensionDataObject ExtensionData
        {
            get { return extensionDataField; }
            set { extensionDataField = value; }
        }

        #endregion

        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        #endregion

        protected void RaisePropertyChanged(string propertyName)
        {
            PropertyChangedEventHandler propertyChanged = PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    [ServiceContract(ConfigurationName = "DataService.ISnippetCacheDataService")]
    public interface ISnippetCacheDataService
    {
        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllLanguages",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllLanguagesResponse")]
        GetAllLanguagesResponse GetAllLanguages(GetAllLanguagesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetLanguageById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByIdResponse")]
        GetLanguageByIdResponse GetLanguageById(GetLanguageByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetLanguageByNameResponse")]
        GetLanguageByNameResponse GetLanguageByName(GetLanguageByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewLanguageResponse")]
        CreateNewLanguageResponse CreateNewLanguage(CreateNewLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateLanguageResponse")]
        UpdateLanguageResponse UpdateLanguage(UpdateLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteLanguage",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteLanguageResponse")]
        DeleteLanguageResponse DeleteLanguage(DeleteLanguageRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllUsers",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllUsersResponse")]
        GetAllUsersResponse GetAllUsers(GetAllUsersRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetUserById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetUserByIdResponse")]
        GetUserByIdResponse GetUserById(GetUserByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetUserByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetUserByNameResponse")]
        GetUserByNameResponse GetUserByName(GetUserByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewUserResponse")]
        CreateNewUserResponse CreateNewUser(CreateNewUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateUserResponse")]
        UpdateUserResponse UpdateUser(UpdateUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteUserResponse")]
        DeleteUserResponse DeleteUser(DeleteUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationTypes",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationTypesResponse")]
        GetAllNotificationTypesResponse GetAllNotificationTypes(GetAllNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByIdResponse")]
        GetNotificationTypesByIdResponse GetNotificationTypeById(GetNotificationTypesByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByName",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationTypeByNameResponse")]
        GetNotificationTypesByNameResponse GetNotificationTypeByName(GetNotificationTypesByNameRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationTypeResponse")]
        CreateNewNotificationTypesResponse CreateNewNotificationType(CreateNewNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationTypeResponse")]
        UpdateNotificationTypesResponse UpdateNotificationType(UpdateNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationType",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationTypeResponse")]
        DeleteNotificationTypesResponse DeleteNotificationType(DeleteNotificationTypesRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllNotifications",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllNotificationsResponse")]
        GetAllNotificationsResponse GetAllNotifications(GetAllNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationByIdResponse")]
        GetNotificationsByIdResponse GetNotificationById(GetNotificationsByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetNotificationsForUser",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetNotificationsForUserResponse")]
        GetAllNotificationsForUserResponse GetNotificationsForUser(GetAllNotificationsForUserRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewNotificationResponse")]
        CreateNewNotificationsResponse CreateNewNotification(CreateNewNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateNotificationResponse")]
        UpdateNotificationsResponse UpdateNotification(UpdateNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteNotification",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteNotificationResponse")]
        DeleteNotificationsResponse DeleteNotification(DeleteNotificationsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllComments",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsResponse")]
        GetAllCommentsResponse GetAllComments(GetAllCommentsRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetAllCommentsBySnippetIdResponse")]
        GetAllCommentsForSnippetResponse GetAllCommentsBySnippetId(GetAllCommentsForSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetCommentById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetCommentByIdResponse")]
        GetCommentByIdResponse GetCommentById(GetCommentByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateNewComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateNewCommentResponse")]
        CreateNewCommentResponse CreateNewComment(CreateNewCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateCommentResponse")]
        UpdateCommentResponse UpdateComment(UpdateCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteComment",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteCommentResponse")]
        DeleteCommentResponse DeleteComment(DeleteCommentRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFilesBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFilesBySnippetIdResponse")]
        GetFilesBySnippetIdResponse GetFilesBySnippetId(GetFilesBySnippetIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFileById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFileByIdResponse")]
        GetFileByIdResponse GetFileById(GetFileByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetFilesByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetFilesByUserIdResponse")]
        GetFilesByUserIdResponse GetFilesByUserId(GetFilesByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateFileResponse")]
        CreateFileResponse CreateFile(CreateFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateFileResponse")]
        UpdateFileResponse UpdateFile(UpdateFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteFile",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteFileResponse")]
        DeleteFileResponse DeleteFile(DeleteFileRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetTotalSnippetCount",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetTotalSnippetCountResponse")]
        int GetTotalSnippetCount(bool isPrivate);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksBySnippetId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksBySnippetIdResponse")]
        GetHyperlinksBySnippetIdResponse GetHyperlinksBySnippetId(GetHyperlinksBySnippetIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinkById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinkByIdResponse")]
        GetHyperlinkByIdResponse GetHyperlinkById(GetHyperlinkByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetHyperlinksByUserIdResponse")]
        GetHyperlinksByUserIdResponse GetHyperlinksByUserId(GetHyperlinksByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateHyperlinkResponse")]
        CreateHyperlinkResponse CreateHyperlink(CreateHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateHyperlinkResponse")]
        UpdateHyperlinkResponse UpdateHyperlink(UpdateHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteHyperlink",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteHyperlinkResponse")]
        DeleteHyperlinkResponse DeleteHyperlink(DeleteHyperlinkRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetPagedSnippetList",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetPagedSnippetListResponse")]
        GetPagedSnippetListResponse GetPagedSnippetList(GetPagedSnippetListRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetById",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByIdResponse")]
        GetSnippetByIdResponse GetSnippetById(GetSnippetByIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByUserId",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByUserIdResponse")]
        GetSnippetsByUserIdResponse GetSnippetsByUserId(GetSnippetsByUserIdRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByGuid",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetByGuidResponse")]
        GetSnippetByGuidResponse GetSnippetByGuid(GetSnippetByGuidRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/CreateSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/CreateSnippetResponse")]
        CreateSnippetResponse CreateSnippet(CreateSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/UpdateSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/UpdateSnippetResponse")]
        UpdateSnippetResponse UpdateSnippet(UpdateSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/DeleteSnippet",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/DeleteSnippetResponse")]
        DeleteSnippetResponse DeleteSnippet(DeleteSnippetRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByTitle",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByTitleResponse")]
        GetSnippetsByTitleResponse GetSnippetsByTitle(GetSnippetsByTitleRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDescription",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDescriptionResponse")]
        GetSnippetsByDescriptionResponse GetSnippetsByDescription(GetSnippetsByDescriptionRequest request);

        [OperationContract(Action = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByData",
            ReplyAction = "http://tempuri.org/ISnippetCacheDataService/GetSnippetsByDataResponse")]
        GetSnippetsByDataResponse GetSnippetsByData(GetSnippetsByDataRequest request);
    }

    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public interface ISnippetCacheDataServiceChannel : ISnippetCacheDataService, IClientChannel
    {
    }

    [DebuggerStepThrough]
    [GeneratedCode("System.ServiceModel", "4.0.0.0")]
    public class SnippetCacheDataServiceClient : ClientBase<ISnippetCacheDataService>, ISnippetCacheDataService
    {
        public SnippetCacheDataServiceClient()
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public SnippetCacheDataServiceClient(string endpointConfigurationName, EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public SnippetCacheDataServiceClient(Binding binding, EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        #region ISnippetCacheDataService Members

        public GetAllLanguagesResponse GetAllLanguages(GetAllLanguagesRequest request)
        {
            return base.Channel.GetAllLanguages(request);
        }

        public GetLanguageByIdResponse GetLanguageById(GetLanguageByIdRequest request)
        {
            return base.Channel.GetLanguageById(request);
        }

        public GetLanguageByNameResponse GetLanguageByName(GetLanguageByNameRequest request)
        {
            return base.Channel.GetLanguageByName(request);
        }

        public CreateNewLanguageResponse CreateNewLanguage(CreateNewLanguageRequest request)
        {
            return base.Channel.CreateNewLanguage(request);
        }

        public UpdateLanguageResponse UpdateLanguage(UpdateLanguageRequest request)
        {
            return base.Channel.UpdateLanguage(request);
        }

        public DeleteLanguageResponse DeleteLanguage(DeleteLanguageRequest request)
        {
            return base.Channel.DeleteLanguage(request);
        }

        public GetAllUsersResponse GetAllUsers(GetAllUsersRequest request)
        {
            return base.Channel.GetAllUsers(request);
        }

        public GetUserByIdResponse GetUserById(GetUserByIdRequest request)
        {
            return base.Channel.GetUserById(request);
        }

        public GetUserByNameResponse GetUserByName(GetUserByNameRequest request)
        {
            return base.Channel.GetUserByName(request);
        }

        public CreateNewUserResponse CreateNewUser(CreateNewUserRequest request)
        {
            return base.Channel.CreateNewUser(request);
        }

        public UpdateUserResponse UpdateUser(UpdateUserRequest request)
        {
            return base.Channel.UpdateUser(request);
        }

        public DeleteUserResponse DeleteUser(DeleteUserRequest request)
        {
            return base.Channel.DeleteUser(request);
        }

        public GetAllNotificationTypesResponse GetAllNotificationTypes(GetAllNotificationTypesRequest request)
        {
            return base.Channel.GetAllNotificationTypes(request);
        }

        public GetNotificationTypesByIdResponse GetNotificationTypeById(GetNotificationTypesByIdRequest request)
        {
            return base.Channel.GetNotificationTypeById(request);
        }

        public GetNotificationTypesByNameResponse GetNotificationTypeByName(GetNotificationTypesByNameRequest request)
        {
            return base.Channel.GetNotificationTypeByName(request);
        }

        public CreateNewNotificationTypesResponse CreateNewNotificationType(CreateNewNotificationTypesRequest request)
        {
            return base.Channel.CreateNewNotificationType(request);
        }

        public UpdateNotificationTypesResponse UpdateNotificationType(UpdateNotificationTypesRequest request)
        {
            return base.Channel.UpdateNotificationType(request);
        }

        public DeleteNotificationTypesResponse DeleteNotificationType(DeleteNotificationTypesRequest request)
        {
            return base.Channel.DeleteNotificationType(request);
        }

        public GetAllNotificationsResponse GetAllNotifications(GetAllNotificationsRequest request)
        {
            return base.Channel.GetAllNotifications(request);
        }

        public GetNotificationsByIdResponse GetNotificationById(GetNotificationsByIdRequest request)
        {
            return base.Channel.GetNotificationById(request);
        }

        public GetAllNotificationsForUserResponse GetNotificationsForUser(GetAllNotificationsForUserRequest request)
        {
            return base.Channel.GetNotificationsForUser(request);
        }

        public CreateNewNotificationsResponse CreateNewNotification(CreateNewNotificationsRequest request)
        {
            return base.Channel.CreateNewNotification(request);
        }

        public UpdateNotificationsResponse UpdateNotification(UpdateNotificationsRequest request)
        {
            return base.Channel.UpdateNotification(request);
        }

        public DeleteNotificationsResponse DeleteNotification(DeleteNotificationsRequest request)
        {
            return base.Channel.DeleteNotification(request);
        }

        public GetAllCommentsResponse GetAllComments(GetAllCommentsRequest request)
        {
            return base.Channel.GetAllComments(request);
        }

        public GetAllCommentsForSnippetResponse GetAllCommentsBySnippetId(GetAllCommentsForSnippetRequest request)
        {
            return base.Channel.GetAllCommentsBySnippetId(request);
        }

        public GetCommentByIdResponse GetCommentById(GetCommentByIdRequest request)
        {
            return base.Channel.GetCommentById(request);
        }

        public CreateNewCommentResponse CreateNewComment(CreateNewCommentRequest request)
        {
            return base.Channel.CreateNewComment(request);
        }

        public UpdateCommentResponse UpdateComment(UpdateCommentRequest request)
        {
            return base.Channel.UpdateComment(request);
        }

        public DeleteCommentResponse DeleteComment(DeleteCommentRequest request)
        {
            return base.Channel.DeleteComment(request);
        }

        public GetFilesBySnippetIdResponse GetFilesBySnippetId(GetFilesBySnippetIdRequest request)
        {
            return base.Channel.GetFilesBySnippetId(request);
        }

        public GetFileByIdResponse GetFileById(GetFileByIdRequest request)
        {
            return base.Channel.GetFileById(request);
        }

        public GetFilesByUserIdResponse GetFilesByUserId(GetFilesByUserIdRequest request)
        {
            return base.Channel.GetFilesByUserId(request);
        }

        public CreateFileResponse CreateFile(CreateFileRequest request)
        {
            return base.Channel.CreateFile(request);
        }

        public UpdateFileResponse UpdateFile(UpdateFileRequest request)
        {
            return base.Channel.UpdateFile(request);
        }

        public DeleteFileResponse DeleteFile(DeleteFileRequest request)
        {
            return base.Channel.DeleteFile(request);
        }

        public int GetTotalSnippetCount(bool isPrivate)
        {
            return base.Channel.GetTotalSnippetCount(isPrivate);
        }

        public GetHyperlinksBySnippetIdResponse GetHyperlinksBySnippetId(GetHyperlinksBySnippetIdRequest request)
        {
            return base.Channel.GetHyperlinksBySnippetId(request);
        }

        public GetHyperlinkByIdResponse GetHyperlinkById(GetHyperlinkByIdRequest request)
        {
            return base.Channel.GetHyperlinkById(request);
        }

        public GetHyperlinksByUserIdResponse GetHyperlinksByUserId(GetHyperlinksByUserIdRequest request)
        {
            return base.Channel.GetHyperlinksByUserId(request);
        }

        public CreateHyperlinkResponse CreateHyperlink(CreateHyperlinkRequest request)
        {
            return base.Channel.CreateHyperlink(request);
        }

        public UpdateHyperlinkResponse UpdateHyperlink(UpdateHyperlinkRequest request)
        {
            return base.Channel.UpdateHyperlink(request);
        }

        public DeleteHyperlinkResponse DeleteHyperlink(DeleteHyperlinkRequest request)
        {
            return base.Channel.DeleteHyperlink(request);
        }

        public GetPagedSnippetListResponse GetPagedSnippetList(GetPagedSnippetListRequest request)
        {
            return base.Channel.GetPagedSnippetList(request);
        }

        public GetSnippetByIdResponse GetSnippetById(GetSnippetByIdRequest request)
        {
            return base.Channel.GetSnippetById(request);
        }

        public GetSnippetsByUserIdResponse GetSnippetsByUserId(GetSnippetsByUserIdRequest request)
        {
            return base.Channel.GetSnippetsByUserId(request);
        }

        public GetSnippetByGuidResponse GetSnippetByGuid(GetSnippetByGuidRequest request)
        {
            return base.Channel.GetSnippetByGuid(request);
        }

        public CreateSnippetResponse CreateSnippet(CreateSnippetRequest request)
        {
            return base.Channel.CreateSnippet(request);
        }

        public UpdateSnippetResponse UpdateSnippet(UpdateSnippetRequest request)
        {
            return base.Channel.UpdateSnippet(request);
        }

        public DeleteSnippetResponse DeleteSnippet(DeleteSnippetRequest request)
        {
            return base.Channel.DeleteSnippet(request);
        }

        public GetSnippetsByTitleResponse GetSnippetsByTitle(GetSnippetsByTitleRequest request)
        {
            return base.Channel.GetSnippetsByTitle(request);
        }

        public GetSnippetsByDescriptionResponse GetSnippetsByDescription(GetSnippetsByDescriptionRequest request)
        {
            return base.Channel.GetSnippetsByDescription(request);
        }

        public GetSnippetsByDataResponse GetSnippetsByData(GetSnippetsByDataRequest request)
        {
            return base.Channel.GetSnippetsByData(request);
        }

        #endregion
    }
}